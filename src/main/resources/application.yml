core-identity-uri: ${SERVICE_SCHEME}://${CORE_IDENTITY_HOST}:${CORE_IDENTITY_PORT}

server:
  port: ${SERVER_PORT:8080}
  servlet:
    encoding:
      charset: UTF-8
      enabled: true
      force: true

spring:
  http:
    client:
      connect-timeout: 6000000
      read-timeout: 6000000
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${AUTH_SERVER}/oauth2/jwks
          issuer-uri: ${AUTH_SERVER}
  ai:
    vectorstore:
      pgvector:
        index-type: hnsw
        distance-type: cosine-distance
        dimensions: 1536
        max-document-batch-size: 10000
        schema-name: ai
        table-name: vector_store
        initialize-schema: true


    embedding:
      options:
        model: text-embedding-3-small
        max-tokens: 8191
        temperature: 0.0
    mcp:
      client:
        toolcallback:
          enabled: true
        enabled: true
        name: mcp-client
        version: 1.0.0
        request-timeout: ${MCP_REQUEST_TIMEOUT:600000s}
        type: SYNC
        sse:
          connections:
            server1:
              url: ${MCP_SERVER}
    openai:
      api-key: ${OPEN_AI_API_KEY}
      base-url: ${OPEN_AI_BASE_URL}

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}

  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?currentSchema=ai
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    driver-class-name: org.postgresql.Driver

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: validate
      jdbc:
        time_zone: UTC
    show-sql: true
    properties:
      hibernate.default_schema: ai
      hibernate.temp.use_jdbc_metadata_defaults: false
      hibernate.jdbc.lob.non_contextual_creation: true

#  flyway:
#    enabled: true
#    locations: classpath:db/migration
#    baseline-on-migrate: true
#    schemas: ai
#    table: flyway_project_history

springdoc:
  api-docs:
    enabled: true
    path: /api/ai/v3/api-docs
  swagger-ui:
    enabled: true
    path: /api/ai/swagger-ui.html

management:
  tracing:
    enabled : true
    sampling:
      probability: 1.0
  endpoints:
    web:
      base-path: ""
      path-mapping:
        health: health
  health:
    ldap:
      enabled: false

thread:
  pool:
    core-size: 5
    max-size: 20
    queue-capacity: 100

logging:
  level:
    root: ${LOG_LEVEL_ROOT:INFO}
    org.springframework.web.cors: ${LOG_LEVEL_SPRING_WEB_CORS:DEBUG}
    org.springframework.security: ${LOG_LEVEL_SPRING_SECURITY:DEBUG}
    com.ginkgooai: ${LOG_LEVEL_GINKGOOAI:DEBUG}
    org.springframework.ai.chat.client.advisor: ${LOG_LEVEL_SPRING_AI_CHAT_CLIENT_ADVISOR:DEBUG}